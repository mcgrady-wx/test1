JavaScript
吴明富
小明

学习手册：
 	W3School离线手册
 	http://www.w3school.com.cn/
 	http://www.runoob.com/
 	https://developer.mozilla.org/zh-CN/

书籍：
 	《JavaScript高级程序设计》
 	《JavaScript权威指南》

1．JavaScript基本介绍及发展趋势
	livescript --> javascript --> ecmascript

	ES3
	ES5
	ES6

2．JS和H5的关系

3．编写JS及如何运行JS
	类比 CSS
	内联
	内部:
		<script type="text/javascript"></script>
			注意：
				type 属性可以省略，默认 type 取值为 "text/javascript"
				<script>元素可以写在文档中任意位置，建议写在 </body> 标签前
	外部：
		<script src="外部JS资源路径"></script>
			注意：
				</script> 必须独立书写
				开始与结束标签间不添加其它JS代码

	运行：
		JS引擎 -- V8

	输出：
		alert("提示内容"); -- 弹出警告框
		document.write(); -- 向文档流输出，可能会打乱页面原有布局
		console.log(); -- 向控制台打印输出日志信息
	输入：
		a. var val = prompt("提示输入信息", "默认值"); -- 弹出输入框
			-- 点击“确定”获取输入值，点击"取消"或者关闭返回 null
		b. 文本框输入
			document.getElementById("xxx")

	注释：
		// 单行注释
		/*
			多行注释
		 */

4．变量的概念及基本运算
	变量：
		内存中数据的存储空间，该空间中的数据可以随运算的进行发生改变

		变量三要素：
			变量名 -- 别名
			变量值 -- 数据
			数据类型 -- 区分不同类型的数据，空间大小
	变量定义：
		语法：
			var 变量名 = 变量值;

		变量声明：
			var 变量名;
		变量赋值：
			变量名 = 变量值;

	变量使用：
		使用变量名引用变量值

	变量类型（数据类型）：
		JS 是弱类型（动态类型）的语言，变量的类型是运行时动态确定的。
		在变量定义时不需要显式指明变量的数据类型。
		分类：
			基本(原始)数据类型：
				Number:
					存储数字
				String:
					存储字符串，字符串是使用 '' (单引号) 或 "" (双引号) 包含的内容
				Boolean:
					布尔类型，存储 true 、false 值
				Undefined：
					未定义，仅有 undefined 一个取值，通常一个变量只声明未赋值时是 Undefined 类型
				Null：
					空，通常用于表示对象的空，仅有 null 一个取值
				Symbol：
					符号，ES6中新增数据类型
			引用数据类型：
				Object：
					对象，包括静态特征（属性）和动作行为（方法），可以使用 {} 来表示对象


		求解表达式的数据类型：
			typeof 表达式
			typeof 所求解的结果数据类型为字符串：
				"number"
				"string"
				"boolean"
				"undefined"
				"object"
				"symbol"
				"function"

5．变量命名规则和关键字的介绍
	关键字：
		语法中已有定义的有特殊意义的单词

	变量命名规则：
		a. 可取 字母、数字、下划线_、$ 这些字符
		b. 不能以数字开头
		c. 不能是关键字
	变量命名规范：
		a. 取简洁的英文单词命名
		b. 第一个单词首字符小写，其它单词首字符大写，除首字符以外其它字符全部小写

6．变量不同类型之间的自动、手动类型转换
	数据类型转换：
		自动(隐式)类型转换：
		手动(显式、强制)类型转换：
			parseInt()
			parseFloat()
				-- 通常用于将字符串解析为数字
				-- 有一定的容错能力，如果第一个字符为非兼容格式的数字字符，则返回 NaN(not a number)
				-- NaN 是 Number 类型的一个特殊取值

			isNaN(xx)
				-- 判断参数是否为非数字结果
				-- 返回 true 表示 非数字（不是数字）
				-- 返回 false 表示 数字

			Number()
				-- 将其它类型转换为数字
				字符串 --> 
					完全兼容的数字格式 --> 对应的数字
					不兼容的格式 --> NaN
					"" --> 0
				Boolean -->
					true --> 1
					false --> 0
				Undefined -->
					undefined --> NaN
				Null -->
					null --> 0
				Object -->
					{} --> NaN

			Boolean()
				-- 其它类型转换为 Boolean 类型
			String()
				-- 其它类型转换为 String 类型

7．赋值、关系、算术等运算符的讲解
	赋值运算符：
		=
			将 右边表达式的值 赋给左边的变量保存

	算术运算符：
		+
		-
		*
		/
		%(模)

		(二目运算符)
		注意：
			+
				字符串的+表示字符串拼接

		自增、自减
		++/--
			i++; <==> i = i + 1;

			前缀(++i)：先运算后引用
			后缀(i++)：先引用后运算

			var i = 5;
			var j = i++ + ++i + ++i + i++ + i + i++;

	关系(比较)：
		>
		<
		>=
		<=
		==/===
			==：
				在数据类型一致的情况下，比较值是否相同；
				数据类型不一致的情况下，先尝试转换为同种数据类型，再比较值是否相同
			===：
				在数据类型一致的情况下，比较值是否相同；
				数据类型不一致的情况下，直接返回 false
		!=/!==

	逻辑运算符：
		&&(并且)
		||(或者)
		!(非，单目运算符)

		短路运算符：
			&&：第一个表达式为 false 则不再进行第二个表达式运算
			||：第一个表达式为 true 则不再进行第二个表达式运算

		闰年：
			能被4整除但不能被100整除 或 能被400整除

	三目运算符：
		条件 ? true : false

		求某年2月有多少天

	复合：
		+=
			i += j; <==> i = i + j;
		-=
		*=
			i *= j + 5; <==> i = i * (j + 5);
		/=
		%=
	其它(了解)：
		+
		-
		~
		&
		|
		>>
		()
		.

8. 二进制：0~1
	计算机识别：
		二进制

	存储容量：
		1 Byte <==> 8 bit
		1 KB == 1024 B
		MB
		GB
		TB
		PB

		100 Mbps

		00000000
		11111111



	十进制
		0~9


Math.floor(xx)
	-- 向下取整：取比参数小的最大整数
Math.ceil()
	-- 向上取整：取比参数大的最小整数
Math.round()
	-- 四舍五入取整













